{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/app.js","app.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","preload","game","load","atlas","image","create","physics","startSystem","Phaser","Physics","ARCADE","arcade","checkCollision","down","add","tileSprite","bricks","group","enableBody","physicsBodyType","brick","y","x","body","bounce","set","immovable","paddle","sprite","world","centerX","anchor","setTo","enable","collideWorldBounds","ball","checkWorldBounds","animations","events","onOutOfBounds","ballLost","this","scoreText","text","font","fill","align","livesText","introText","input","onDown","releaseBall","update","width","ballOnPaddle","collide","ballHitPaddle","ballHitBrick","velocity","play","visible","lives","gameOver","reset","stop","_ball","_brick","kill","score","countLiving","callAll","_paddle","diff","Math","random","Game","AUTO"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCMA,QAAAK,KAEAC,EAAAC,KAAAC,MACA,WACA,qCACA,uCACAF,EAAAC,KAAAE,MAAA,YAAA,6BAmBA,QAAAC,KAEAJ,EAAAK,QAAAC,YAAAC,OAAAC,QAAAC,QAGAT,EAAAK,QAAAK,OAAAC,eAAAC,MAAA,EAEA5B,EAAAgB,EAAAa,IAAAC,WAAA,EAAA,EAAA,IAAA,IAAA,aAEAC,EAAAf,EAAAa,IAAAG,QACAD,EAAAE,YAAA,EACAF,EAAAG,gBAAAX,OAAAC,QAAAC,MAIA,KAAA,GAFAU,GAEAC,EAAA,EAAA,EAAAA,EAAAA,IACA,IAAA,GAAAC,GAAA,EAAA,GAAAA,EAAAA,IACAF,EAAAJ,EAAAX,OAAA,IAAA,GAAAiB,EAAA,IAAA,GAAAD,EACA,WAAA,UAAAA,EAAA,GAAA,UACAD,EAAAG,KAAAC,OAAAC,IAAA,GACAL,EAAAG,KAAAG,WAAA,CAIAC,GAAA1B,EAAAa,IAAAc,OAAA3B,EAAA4B,MAAAC,QAAA,IAAA,WAAA,kBACAH,EAAAI,OAAAC,MAAA,GAAA,IAEA/B,EAAAK,QAAA2B,OAAAN,EAAAnB,OAAAC,QAAAC,QAEAiB,EAAAJ,KAAAW,oBAAA,EACAP,EAAAJ,KAAAC,OAAAC,IAAA,GACAE,EAAAJ,KAAAG,WAAA,EAEAS,EAAAlC,EAAAa,IAAAc,OAAA3B,EAAA4B,MAAAC,QAAAH,EAAAN,EAAA,GAAA,WAAA,cACAc,EAAAJ,OAAAN,IAAA,IACAU,EAAAC,kBAAA,EAEAnC,EAAAK,QAAA2B,OAAAE,EAAA3B,OAAAC,QAAAC,QAEAyB,EAAAZ,KAAAW,oBAAA,EACAC,EAAAZ,KAAAC,OAAAC,IAAA,GAEAU,EAAAE,WAAAvB,IAAA,QAAA,aAAA,aAAA,aAAA,aAAA,cAAA,IAAA,GAAA,GAEAqB,EAAAG,OAAAC,cAAAzB,IAAA0B,EAAAC,MAEAC,EAAAzC,EAAAa,IAAA6B,KAAA,GAAA,IAAA,YAAAC,KAAA,aAAAC,KAAA,UAAAC,MAAA,SACAC,EAAA9C,EAAAa,IAAA6B,KAAA,IAAA,IAAA,YAAAC,KAAA,aAAAC,KAAA,UAAAC,MAAA,SACAE,EAAA/C,EAAAa,IAAA6B,KAAA1C,EAAA4B,MAAAC,QAAA,IAAA,sBAAAc,KAAA,aAAAC,KAAA,UAAAC,MAAA,WACAE,EAAAjB,OAAAC,MAAA,GAAA,IAEA/B,EAAAgD,MAAAC,OAAApC,IAAAqC,EAAAV,MAIA,QAAAW,KAKAzB,EAAAL,EAAArB,EAAAgD,MAAA3B,EAEAK,EAAAL,EAAA,GACAK,EAAAL,EAAA,GACAK,EAAAL,EAAArB,EAAAoD,MAAA,KACA1B,EAAAL,EAAArB,EAAAoD,MAAA,IAGAC,EACAnB,EAAAZ,KAAAD,EAAAK,EAAAL,GAEArB,EAAAK,QAAAK,OAAA4C,QAAApB,EAAAR,EAAA6B,EAAA,KAAAf,MACAxC,EAAAK,QAAAK,OAAA4C,QAAApB,EAAAnB,EAAAyC,EAAA,KAAAhB,OAKA,QAAAU,KAEAG,IACAA,GAAA,EACAnB,EAAAZ,KAAAmC,SAAArC,EAAA,KACAc,EAAAZ,KAAAmC,SAAApC,EAAA,IACAa,EAAAE,WAAAsB,KAAA,QACAX,EAAAY,SAAA,GAKA,QAAApB,KAEAqB,IACAd,EAAAJ,KAAA,UAAAkB,EAEA,IAAAA,EACAC,KAEAR,GAAA,EAEAnB,EAAA4B,MAAApC,EAAAJ,KAAAD,EAAA,GAAAK,EAAAN,EAAA,IAEAc,EAAAE,WAAA2B,QAKA,QAAAF,KAEA3B,EAAAZ,KAAAmC,SAAA1B,MAAA,EAAA,GAEAgB,EAAAL,KAAA,aACAK,EAAAY,SAAA,EAIA,QAAAH,GAAAQ,EAAAC,GAEAA,EAAAC,OAEAC,GAAA,GAEA1B,EAAAC,KAAA,UAAAyB,EAGA,IAAApD,EAAAqD,gBAEAD,GAAA,IACA1B,EAAAC,KAAA,UAAAyB,EACApB,EAAAL,KAAA,iBAGAW,GAAA,EACAnB,EAAAZ,KAAAmC,SAAAjC,IAAA,GACAU,EAAAb,EAAAK,EAAAL,EAAA,GACAa,EAAAd,EAAAM,EAAAN,EAAA,GACAc,EAAAE,WAAA2B,OAGAhD,EAAAsD,QAAA,WAKA,QAAAd,GAAAS,EAAAM,GAEA,GAAAC,GAAA,CAEAP,GAAA3C,EAAAiD,EAAAjD,GAEAkD,EAAAD,EAAAjD,EAAA2C,EAAA3C,EACA2C,EAAA1C,KAAAmC,SAAApC,EAAA,IAAAkD,GACAP,EAAA3C,EAAAiD,EAAAjD,GAEAkD,EAAAP,EAAA3C,EAAAiD,EAAAjD,EACA2C,EAAA1C,KAAAmC,SAAApC,EAAA,GAAAkD,GAIAP,EAAA1C,KAAAmC,SAAApC,EAAA,EAAA,EAAAmD,KAAAC,SA7LA,GAgBAvC,GACAR,EACAX,EAOA0B,EACAK,EACAC,EAEA/D,EA7BAgB,EAAA,GAAAO,QAAAmE,KAAA,IAAA,IAAAnE,OAAAoE,KAAA,kBACA5E,QAAAA,EACAK,OAAAA,EACA+C,OAAAA,IAiBAE,GAAA,EAEAO,EAAA,EACAO,EAAA,YC4KW","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var game = new Phaser.Game(800, 600, Phaser.AUTO, 'phaser-example',\n{preload: preload,\ncreate: create,\nupdate: update\n});\n\nfunction preload() {\n\n  game.load.atlas(\n    'breakout',\n    'assets/games/breakout/breakout.png',\n    'assets/games/breakout/breakout.json');\n  game.load.image('starfield', 'assets/misc/starfield.jpg');\n\n}\n\nvar ball;\nvar paddle;\nvar bricks;\n\nvar ballOnPaddle = true;\n\nvar lives = 3;\nvar score = 0;\n\nvar scoreText;\nvar livesText;\nvar introText;\n\nvar s;\n\nfunction create() {\n\n  game.physics.startSystem(Phaser.Physics.ARCADE);\n\n  //  We check bounds collisions against all walls other than the bottom one\n  game.physics.arcade.checkCollision.down = false;\n\n  s = game.add.tileSprite(0, 0, 800, 600, 'starfield');\n\n  bricks = game.add.group();\n  bricks.enableBody = true;\n  bricks.physicsBodyType = Phaser.Physics.ARCADE;\n\n  var brick;\n\n  for (var y = 0; y < 4; y++) {\n    for (var x = 0; x < 15; x++) {\n      brick = bricks.create(120 + (x * 36), 100 + (y * 52),\n        'breakout', 'brick_' + (y + 1) + '_1.png');\n      brick.body.bounce.set(1);\n      brick.body.immovable = true;\n    }\n  }\n\n  paddle = game.add.sprite(game.world.centerX, 500, 'breakout', 'paddle_big.png');\n  paddle.anchor.setTo(0.5, 0.5);\n\n  game.physics.enable(paddle, Phaser.Physics.ARCADE);\n\n  paddle.body.collideWorldBounds = true;\n  paddle.body.bounce.set(1);\n  paddle.body.immovable = true;\n\n  ball = game.add.sprite(game.world.centerX, paddle.y - 16, 'breakout', 'ball_1.png');\n  ball.anchor.set(0.5);\n  ball.checkWorldBounds = true;\n\n  game.physics.enable(ball, Phaser.Physics.ARCADE);\n\n  ball.body.collideWorldBounds = true;\n  ball.body.bounce.set(1);\n\n  ball.animations.add('spin', ['ball_1.png', 'ball_2.png', 'ball_3.png', 'ball_4.png', 'ball_5.png'], 50, true, false);\n\n  ball.events.onOutOfBounds.add(ballLost, this);\n\n  scoreText = game.add.text(32, 550, 'score: 0', {font: \"20px Arial\", fill: \"#ffffff\", align: \"left\"});\n  livesText = game.add.text(680, 550, 'lives: 3', {font: \"20px Arial\", fill: \"#ffffff\", align: \"left\"});\n  introText = game.add.text(game.world.centerX, 400, '- click to start -', {font: \"40px Arial\", fill: \"#ffffff\", align: \"center\"});\n  introText.anchor.setTo(0.5, 0.5);\n\n  game.input.onDown.add(releaseBall, this);\n\n}\n\nfunction update() {\n\n  //  Fun, but a little sea-sick inducing :) Uncomment if you like!\n  // s.tilePosition.x += (game.input.speed.x / 2);\n\n  paddle.x = game.input.x;\n\n  if (paddle.x < 24) {\n    paddle.x = 24;\n  } else if (paddle.x > game.width - 24) {\n    paddle.x = game.width - 24;\n  }\n\n  if (ballOnPaddle) {\n    ball.body.x = paddle.x;\n  } else {\n      game.physics.arcade.collide(ball, paddle, ballHitPaddle, null, this);\n      game.physics.arcade.collide(ball, bricks, ballHitBrick, null, this);\n    }\n\n}\n\nfunction releaseBall() {\n\n  if (ballOnPaddle) {\n    ballOnPaddle = false;\n    ball.body.velocity.y = -300;\n    ball.body.velocity.x = -75;\n    ball.animations.play('spin');\n    introText.visible = false;\n  }\n\n}\n\nfunction ballLost() {\n\n  lives--;\n  livesText.text = 'lives: ' + lives;\n\n  if (lives === 0) {\n    gameOver();\n  } else {\n      ballOnPaddle = true;\n\n      ball.reset(paddle.body.x + 16, paddle.y - 16);\n\n        ball.animations.stop();\n    }\n\n}\n\nfunction gameOver() {\n\n  ball.body.velocity.setTo(0, 0);\n\n    introText.text = 'Game Over!';\n  introText.visible = true;\n\n}\n\nfunction ballHitBrick(_ball, _brick) {\n\n  _brick.kill();\n\n  score += 10;\n\n  scoreText.text = 'score: ' + score;\n\n  //  Are they any bricks left?\n  if (bricks.countLiving() === 0) {\n    //  New level starts\n    score += 1000;\n    scoreText.text = 'score: ' + score;\n    introText.text = '- Next Level -';\n\n    //  Let's move the ball back to the paddle\n    ballOnPaddle = true;\n    ball.body.velocity.set(0);\n    ball.x = paddle.x + 16;\n    ball.y = paddle.y - 16;\n    ball.animations.stop();\n\n    //  And bring the bricks back from the dead :)\n    bricks.callAll('revive');\n  }\n\n}\n\nfunction ballHitPaddle(_ball, _paddle) {\n\n  var diff = 0;\n\n  if (_ball.x < _paddle.x) {\n    //  Ball is on the left-hand side of the paddle\n    diff = _paddle.x - _ball.x;\n    _ball.body.velocity.x = (-10 * diff);\n  } else if (_ball.x > _paddle.x) {\n    //  Ball is on the right-hand side of the paddle\n    diff = _ball.x - _paddle.x;\n    _ball.body.velocity.x = (10 * diff);\n  } else {\n      //  Ball is perfectly in the middle\n      //  Add a little random X to stop it bouncing straight up!\n      _ball.body.velocity.x = 2 + Math.random() * 8;\n    }\n\n}\n",null],"sourceRoot":"/source/"}